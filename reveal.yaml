%YAML 1.2
---
description: "from CQS to CQRS to full blown event sourcing"
author: "jrouaix"
theme: league # league # night
option:
  hash: true
  slide number: c/t
  pdf max pages per slide: 1
chapter-header: true
gear!: &gear https://raw.githubusercontent.com/rust-lang/rust-artwork/master/logo/rust-logo-gear-only.svg
icon: *gear
style: |
  .reveal .slide-number {
      position: absolute;
      right: 2em;
      top: 1em;
      color: #877b68;
      background-color: transparent;
  }
---
- title: "CQRS - EventSourcing"
  id: title
  doc: |
    JeUXdiCode - 2019 - La Rochelle 
  h-stack: 
    - doc: JÃ©rÃ´me Rouaix

  notes: |
    set the screen turn off after 10 minutes in Power & Sleep

- title: "Me"
  id: me
  doc: |
    - JÃ©rÃ´me
    - 40+ years old / half+ in I.T.
    - Freelance Dev
    - xp in .net C#, Rust
    - less xp in plenty of stuff

- title: "Summary"
  id: summary
  sub:
    - title: Mission start
      doc: |
        - N-Tiers
        - Why it's not enough

    - title: C.Q.R.S.
      doc: |
        - Command & Query Responsibility Segregation
        - Where does it apply
        - How to do it wrong ...

    - title: Event Sourcing
      doc: |
        - Store the log, project the state
        - Magic features / super powers for free
        - What could possibly go wrong ?

    - title:  What we won't see
      doc: |
        - DDD in details
        - Command handlers
        - Process managers
        - EventSourcing & RGPD

- title: "N-Tiers"
  id: n-tiers
  v-stack: 
    - h-stack:
      - doc: |
          #### Front
          - Present
          #### Back
          - Validate
          - Execute
          ####  Data
          - Persist
      - img:
        label: N Tiers
        src: _assets/Overview_of_a_three-tier_application_vectorVersion.png
        pop: true
    - doc: |
        [ðŸ“– Source](https://en.wikipedia.org/wiki/Multitier_architecture)

  sub:
  - title-hidden: N Tiers Examples
    id: n-tiers-examples
    doc: |
      test
